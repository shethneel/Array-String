# -*- coding: utf-8 -*-
"""Find the Index of the First Occurrence in a String.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UFYFG4l-qZC6H1GhwLgroNnGp8P7B7xB

Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.



Example 1:

Input: haystack = "sadbutsad", needle = "sad"

Output: 0

Explanation: "sad" occurs at index 0 and 6.

The first occurrence is at index 0, so we return 0.

Example 2:

Input: haystack = "leetcode", needle = "leeto"

Output: -1

Explanation: "leeto" did not occur in "leetcode", so we return -1.
"""

haystack = "sadbutsad"
needle = "sad"
ans = -1

# Iterate over each position in the haystack
for i in range(len(haystack) - len(needle) + 1):
    found = True

    # Check if the substring starting from the current position matches the needle
    for j in range(len(needle)):
        if needle[j] != haystack[i + j]:
            found = False
            break

    if found == True:
        ans = i
        break

print (ans)

"""This solution utilizes a brute-force approach to find the first occurrence of the needle within the haystack.

Here's a step-by-step breakdown of the logic:

1. Iterate over each position in the haystack:
   - The loop runs from `0` to `len(haystack) - len(needle)`. This ensures that we don't go beyond the end of the haystack while looking for the needle.

2. Within each position in the haystack, check if the substring starting from the current position matches the needle:
   - Another loop runs for the length of the needle.
   - For each character in the needle, compare it with the corresponding character in the haystack starting from the current position (`i + j`).
   - If any character doesn't match, set `found` to `False` and break out of the loop.

3. If the entire needle is found in the haystack starting from the current position, mark `found` as `True`:
   - If `found` is still `True` after the inner loop, it means that the entire needle was found starting from the current position.
   - In that case, record the index `i` as the answer and break out of the outer loop.

4. Return the index of the first occurrence of the needle, or `-1` if the needle is not found in the haystack.

This approach essentially tries all possible starting positions in the haystack and checks if the needle matches from that position onward. If it does, it records the index of the first occurrence. If the needle is not found anywhere in the haystack, the function returns `-1`.
"""