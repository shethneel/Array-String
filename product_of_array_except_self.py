# -*- coding: utf-8 -*-
"""Product of Array Except Self.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UFYFG4l-qZC6H1GhwLgroNnGp8P7B7xB

Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.



Example 1:

Input:

nums = [1,2,3,4]

Output: [24,12,8,6]

Example 2:

Input:

nums = [-1,1,0,-3,3]

Output: [0,0,9,0,0]
"""

class Solution:
    def productExceptSelf(nums):
        length=len(nums)
        res=[1]*length
        pre = 1
        post = 1
        for i in range(length):
            res[i] = pre
            pre = pre*nums[i]
        for i in range(length-1,-1,-1):
            res[i]*=post
            post*=nums[i]
        return res

nums = [1,2,3,4]

x = Solution.productExceptSelf(nums)

x

"""The given Python code is used to find the product of an array except for the current element. Here's a simple explanation of how it works:

1. It initializes an empty result array with all elements set to 1.
2. It then calculates the product of all elements to the left of the current element and stores it in the result array.
3. After that, it calculates the product of all elements to the right of the current element and multiplies it with the corresponding value in the result array.
4. Finally, it returns the result array, which contains the product of all elements except the current element.

So, the code essentially goes through the array twice, first to calculate the products of all elements to the left, and then to multiply them by the products of all elements to the right.

This approach avoids using division and has a time complexity of O(n) without using extra space.

The code uses the following logic to achieve this:
- It iterates through the array to calculate the product of all elements to the left of each element and stores it in the result array.
- Then, it iterates through the array in reverse to calculate the product of all elements to the right of each element and multiplies it with the corresponding value in the result array.

This explanation should help a non-coder understand how the given Python code works.

Link to understand this more easily :

https://www.youtube.com/watch?v=bNvIQI2wAjk&t=548s
"""