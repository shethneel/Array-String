# -*- coding: utf-8 -*-
"""Longest Common Prefix.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UFYFG4l-qZC6H1GhwLgroNnGp8P7B7xB

Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.



Example 1:

Input: s = "the sky is blue"

Output: "blue is sky the"

Example 2:

Input: s = "  hello world  "

Output: "world hello"

Explanation: Your reversed string should not contain leading or trailing spaces.

Example 3:

Input: s = "a good   example"

Output: "example good a"

Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
"""

s = "a good   example"

lst = s.split()

ans = ''

for i in range(len(lst)-1, -1, -1):

  if i == 0:
      ans = ans + lst[i]
  else:
      ans = ans + lst[i] + ' '

ans

"""The solution provided uses the following logic to reverse the order of words in the input string `s`:

1. Split the input string `s` into a list of words using the `.split()` method. This splits the string based on whitespace, effectively separating the words.
2. Initialize an empty string `ans` to store the reversed string.
3. Iterate over the list of words in reverse order, starting from the last word and ending with the first word.
4. If the current word is the last word (i.e., when `i == 0`), append it to the `ans` string without adding a trailing space.
5. Otherwise, append the current word followed by a single space to the `ans` string.
6. Finally, return the `ans` string, which contains the reversed order of words with single spaces between them.

Let's apply this logic to the example "a good   example":

1. Split the input string into a list of words: `['a', 'good', 'example']`.
2. Initialize an empty string `ans`.
3. Iterate over the list of words in reverse order:
   - For the last word ("example"), append it to `ans` without adding a trailing space.
   - For the second word ("good"), append it to `ans` followed by a single space.
   - For the first word ("a"), append it to `ans` followed by a single space.
4. Return the `ans` string, which is "example good a".

This logic effectively reverses the order of words in the input string while ensuring that only a single space separates each word, and leading/trailing spaces are removed.
"""